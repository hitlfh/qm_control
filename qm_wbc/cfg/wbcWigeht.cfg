#!/usr/bin/env python
PACKAGE = "qm_wbc"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("kp_swing", double_t, 0, "Kp of swing leg", 350, 0.0, 500)
gen.add("kd_swing", double_t, 0, "Kd of swing leg", 37, 0.0, 500)

gen.add("kp_arm_linear", double_t, 0, "Kp of arm linear", 150, 0.0, 20000)
gen.add("kd_arm_linear", double_t, 0, "Kd of arm linear", 40, 0.0, 1000)
gen.add("kp_arm_angular", double_t, 0, "Kp of arm angular", 150, 0.0, 1000)
gen.add("kd_arm_angular", double_t, 0, "Kd of arm angular", 40, 0.0, 1000)

gen.add("kp_arm_joint", double_t, 0, "Kp of arm joint", 150, 0.0, 1000)
gen.add("kd_arm_joint", double_t, 0, "Kd of arm joint", 40, 0.0, 1000)

gen.add("baseHeightKp", double_t, 0, "Kp of base height", 400, 0.0, 20000)
gen.add("baseHeightKd", double_t, 0, "Kd of base height", 140, 0.0, 20000)

gen.add("kp_base_linear", double_t, 0, "Kp of base linear", 2000, 0.0, 20000)
gen.add("kd_base_linear", double_t, 0, "Kd of base linear", 50, 0.0, 20000)

gen.add("kp_base_angular", double_t, 0, "Kp of base angular", 400, 0.0, 500)
gen.add("kd_base_angular", double_t, 0, "Kd of base angular", 140, 0.0, 500)

# 纯导纳proxy 追踪
gen.add("kp_joint2_ProxyTracking", double_t, 0, "Kp of joint2ProxyTracking", 5500, 0.0, 20000)
gen.add("kd_joint2_ProxyTracking", double_t, 0, "Kd of joint2ProxyTracking", 100, 0.0, 20000)
gen.add("kp_joint1_ProxyTracking", double_t, 0, "Kp of joint1ProxyTracking", 3000, 0.0, 20000)
gen.add("kd_joint1_ProxyTracking", double_t, 0, "Kd of joint1ProxyTracking", 120, 0.0, 20000)

gen.add("kp_arm_joint_1", double_t, 0, "Kp of arm linear", 4000, 0.0, 20000)
gen.add("kp_arm_joint_2", double_t, 0, "Kd of arm linear", 4200, 0.0, 20000)
gen.add("kp_arm_joint_3", double_t, 0, "Kp of arm angular", 4000, 0.0, 20000)
gen.add("kp_arm_joint_4", double_t, 0, "Kd of arm angular", 4000, 0.0, 20000)
gen.add("kp_arm_joint_5", double_t, 0, "Kp of arm angular", 4200, 0.0, 20000)
gen.add("kp_arm_joint_6", double_t, 0, "Kd of arm angular", 6000.0, 0.0, 20000)

gen.add("kd_arm_joint_1", double_t, 0, "Kp of arm linear", 75, 0.0, 20000)
gen.add("kd_arm_joint_2", double_t, 0, "Kd of arm linear", 75, 0.0, 20000)
gen.add("kd_arm_joint_3", double_t, 0, "Kp of arm angular", 75, 0.0, 20000)
gen.add("kd_arm_joint_4", double_t, 0, "Kd of arm angular", 75, 0.0, 20000)
gen.add("kd_arm_joint_5", double_t, 0, "Kp of arm angular", 75, 0.0, 20000)
gen.add("kd_arm_joint_6", double_t, 0, "Kd of arm angular", 75, 0.0, 20000)

gen.add("kp_ee_linear_x", double_t, 0, "Kp of arm linear", 3000.0, 0.0, 20000) # 6000
gen.add("kp_ee_linear_y", double_t, 0, "Kd of arm linear", 3000.0, 0.0, 20000)
gen.add("kp_ee_linear_z", double_t, 0, "Kp of arm angular", 3000.0, 0.0, 20000)

gen.add("kd_ee_linear_x", double_t, 0, "Kp of arm linear", 75.0, 0.0, 20000) # 100
gen.add("kd_ee_linear_y", double_t, 0, "Kd of arm linear", 75.0, 0.0, 20000)
gen.add("kd_ee_linear_z", double_t, 0, "Kp of arm angular", 75.0, 0.0, 20000)

gen.add("kp_ee_angular_x", double_t, 0, "Kp of arm linear", 2000.0, 0.0, 20000)
gen.add("kp_ee_angular_y", double_t, 0, "Kd of arm linear", 2000.0, 0.0, 20000)
gen.add("kp_ee_angular_z", double_t, 0, "Kp of arm angular", 2000.0, 0.0, 20000)

gen.add("kd_ee_angular_x", double_t, 0, "Kp of arm linear", 75, 0.0, 20000)
gen.add("kd_ee_angular_y", double_t, 0, "Kd of arm linear", 75, 0.0, 20000)
gen.add("kd_ee_angular_z", double_t, 0, "Kp of arm angular", 75, 0.0, 20000)

exit(gen.generate(PACKAGE, "wbcweight", "WbcWeight"))